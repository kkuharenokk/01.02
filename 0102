//#include <iostream>
//using namespace std;
//int main() {
//	int s1, s2;
//	cin >> s1 >> s2;
//	if (s1 > s2)
//		cout << "s2 mazak neka sk1";
//	else cout << "s1 mazak neka sk2"<< endl;
//
//	if (s1<0)
//		cout << "viss ir pareizi!";
//	else
//		cout << "uzraksti negativu skaitli!" << endl;
//	if (s2 < 0)
//		cout << "viss ir pareizi!";
//	else
//		cout << "uzraksti negativu skaitli!" << endl;
//	if (s1 % 2 == 0)
//		cout << "para";
//	else
//		cout << "nepara" << endl;
//	if (s2 % 2 == 0)
//		cout << "para";
//	else
//		cout << "nepara";
//}

#include <iostream>
using namespace std;
int main() {
	int atz;
	cin >> atz;
	if (atz >= 90 && atz <= 100)
		cout << "A" << endl;
	if (atz >= 80 && atz <90)
		cout << "B" << endl;
	if (atz >= 70 && atz <80)
		cout << "C" << endl;
	if (atz >= 60 && atz <70)
		cout << "D" << endl;
	if (atz >=40 && atz <60)
		cout << "E" << endl;
	if (atz < 40)
		cout << "F" << endl;

}

#include <iostream>
using namespace std;
int main() {
	int sk1, sk2, sk3;
	cin >> sk1 >> sk2 >> sk3;
	if (sk1 == sk2 && sk2 == sk3)
		cout << "Vienadmalu" << endl;

	else if (sk1 == sk2 || sk1 == sk3 || sk2 == sk3)
		cout << "Vienadsanu" << endl;
}
//#include <iostream>
//using namespace std;
//int main() {
//	int i = 0;
//	do {
//		i++;
//		cout << i *3 << endl;
//	} while (i != 125);
//}

//#include <iostream>
//using namespace std;
//int main() {
//	int i = 20;
//	do {
//		i--;
//		cout << i * i * i << endl;
//	} while (i != 1);
//}


//#include <iostream>
//using namespace std;
//int main() {
//	int i = 0;
//	do {
//		i++;
//		cout << "1/" << i << endl;
//	} while (i != 1000);
//}


//
//#include <iostream>
//using namespace std;
//int main() {
//	
//
//		cout << "             *              " << endl;
//		cout << "            ***             " << endl;
//		cout << "           *****              " << endl;
//		cout << "          *******             " << endl;
//		cout << "         *********              " << endl;
//		cout << "        ***********             " << endl;
//		cout << "         *********             " << endl;
//		cout << "        ***********         " << endl;
//		cout << "       *************        " << endl;
//		cout << "      ***************       " << endl;
//		cout << "       *************        " << endl;
//		cout << "      ***************       " << endl;
//		cout << "     *****************      " << endl;
//		cout << "    *******************     " << endl;
//		cout << "           *****      " << endl;
//		cout << "           *****            " << endl;
//		cout << "           *****            " << endl;
//		
//}

//#include <iostream>
//using namespace std;
//int main() {
//	string at;
//	do {
//		cin >> at;
//		cout << at;
//	} while (at != "stop");
//}

//#include <iostream>
//using namespace std;
//int main(){
//string pass;
//int mag = 0;
//do {
//	cout << "Enter password:" << endl;
//	mag++;
//	cin >> pass;
//} while (mag != 5 && pass!= "1234");
//
//}
#include <iostream>
#include <vector>

using namespace std;

int main()
{
	/*vector <int> sk{ 1,2,3,1,2 };
	if (sk[0] == 1)
		cout << "sk 1 ir 1. vietaa" << endl;
	if (sk[1] == 1)
		cout << "sk 1 ir 2. vietaa" << endl;
	if (sk[2] == 1)
		cout << "sk 1 ir 3. vietaa" << endl;
	if (sk[3] == 1)
		cout << "sk 1 ir 4. vietaa" << endl;
	if (sk[4] == 1)
		cout << "sk 1 ir 5. vietaa" << endl;
}*/
/*vector <int> sk{ 1,2,3,1,2 };
if (sk[0] == 4)
	cout << "sk 4 ir 1. vietaa" << endl;
if (sk[0] != 4)
	cout << "sk 4 nav 1. vietaa" << endl;
if (sk[1] == 4)
	cout << "sk 4 ir 2. vietaa" << endl;
if (sk[1] != 4)
	cout << "sk 4 nav 2. vietaa" << endl;
if (sk[2] == 4)
	cout << "sk 4 ir 3. vietaa" << endl;
if (sk[2] != 4)
	cout << "sk 4 nav 3. vietaa" << endl;
if (sk[3] == 4)
	cout << "sk 4 ir 4. vietaa" << endl;
if (sk[3] != 4)
	cout << "sk 4 nav 4. vietaa" << endl;
if (sk[4] == 4)
	cout << "sk 4 ir 5. vietaa" << endl;
if (sk[4] != 4)
	cout << "sk 4 nav 5. vietaa" << endl;
}*/
/*string atb, num;
vector<string> code{ "+1", "+44", "+86", "+91", "+1", "+61" };
vector<string> country{ "USA", "UK", "China", "India", "Canada", "Australia" };
cin >> atb>> num;
if (code[0] == atb) { cout << country[0] << atb << num << endl; }
if (code[1] == atb) { cout << country[1] << atb << num << endl; }
if (code[2] == atb) { cout << country[2] << atb << num << endl; }
if (code[3] == atb) { cout << country[3] << atb << num << endl; }
if (code[4] == atb) { cout << country[4] << atb << num << endl; }
if (code[5] == atb) { cout << country[5] << atb << num << endl; }
if (code[0] != atb && code[1] != atb && code[2] != atb && code[3] != atb && code[4] != atb && code[5] != atb) { cout << "we dont this country in our list"; }
}*/
/*int atz;
vector<int> atzi{ 3,8,7,4 };
vector<string> vards{ "Anna", "Antons", "Vlads", "Artemijs" };
cin >> atz;
if (atzi[0] == atz) { cout << vards[0]  << endl; }
if (atzi[1] == atz) { cout << vards[1]  << endl; }
if (atzi[2] == atz) { cout << vards[2]  << endl; }
if (atzi[3] == atz) { cout << vards[3]  << endl; }
if (atzi[0] != atz && atzi[1] != atz && atzi[2] != atz && atzi[3] != atz) { cout << "nav tadas atzimes" << endl; }
}*/
	/*vector<int> sk{ 2,3,5,7 };
	cout << sk[0] * sk[0] << endl;
	cout << sk[1] * sk[1] << endl;
	cout << sk[2] * sk[2] << endl;
	cout << sk[3] * sk[3] << endl;
}*/
CREATE TABLE EMPLOYEE (
  emlpoye_ID INTEGER NOT NULL,
  kurjera_Vards TEXT NOT NULL,
  kurjera_Uzvards TEXT NOT NULL,
  customer_ID INTEGER NOT NULL,
  customer_name TEXT NOT NULL,
  pilseta TEXT NOT NULL
);
-- create
CREATE TABLE EMPLOYEE (
  ID INTEGER PRIMARY KEY,
  kurjera_Vārds TEXT NOT NULL,
  kurjera_Uzvārds TEXT NOT NULL,
  rajons TEXT NOT NULL,
  vecums INTEGER NOT NULL,
  dzimums TEXT NOT NULL
);

-- insert
INSERT INTO EMPLOYEE VALUES (1, 'Anna', 'Kuzņecova', 'Rīga', 25, 'sieviete');
INSERT INTO EMPLOYEE VALUES (2, 'Jeļizaveta', 'Vasiļjeva', 'Jūrmala', 46,'sieviete');
INSERT INTO EMPLOYEE VALUES (3, 'Artūrs', 'BLūsiņš', 'Rīga', 21,'vīrietis');
INSERT INTO EMPLOYEE VALUES (4, 'Polina', 'Lapova', 'Daugavpils', 32,'sieviete');
INSERT INTO EMPLOYEE VALUES (5, 'Staņislavs', 'Tarnavskis', 'Ogre', 19,'vīrietis');
INSERT INTO EMPLOYEE VALUES (6, 'Evelīna', 'Krūmiņa', 'Olaine', 25,'sieviete');



-- fetch 
SELECT * FROM EMPLOYEE WHERE vecums>45;
SELECT * FROM EMPLOYEE WHERE rajons='Rīga' and dzimums='sieviete';
SELECT * FROM EMPLOYEE WHERE rajons='Ogre' and dzimums='vīrietis';
SELECT AVG(vecums) FROM EMPLOYEE;
SELECT MAX(vecums) FROM EMPLOYEE;
SELECT MIN(vecums) FROM EMPLOYEE;


-- insert
INSERT INTO EMPLOYEE VALUES (1, 'Thomas(Neo)', 'Anderson', 1, 'Jewelry Store', 'London');
INSERT INTO EMPLOYEE VALUES (1, 'Thomas(Neo)', 'Anderson', 2, 'Bakery', 'London');
INSERT INTO EMPLOYEE VALUES (1, 'Thomas(Neo)', 'Anderson', 3, 'Cafe', 'London');
INSERT INTO EMPLOYEE VALUES (1, 'Thomas(Neo)', 'Anderson', 4, 'Restaurant', 'London');
INSERT INTO EMPLOYEE VALUES (2, 'Agent', 'Smith', 1,'Jewelry Store', 'Cardiff');
INSERT INTO EMPLOYEE VALUES (2, 'Agent', 'Smith', 2,'Bakery', 'Cardiff');
INSERT INTO EMPLOYEE VALUES (2, 'Agent', 'Smith', 3,'Cafe', 'Cardiff');
INSERT INTO EMPLOYEE VALUES (2, 'Agent', 'Smith', 4,'Restaurant', 'Cardiff');

-- fetch 
SELECT * FROM EMPLOYEE WHERE customer_name='Bakery';
SELECT * FROM EMPLOYEE WHERE emlpoye_ID=4 and kurjera_Uzvards='Anderson';
SELECT AVG(customer_ID) FROM EMPLOYEE;
SELECT MIN(customer_ID) FROM EMPLOYEE;
